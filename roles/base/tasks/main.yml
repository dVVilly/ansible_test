# Base Role
## Configure System
### Set Timezone
- name: "Set timezone"
  community.general.timezone:
    name: "{{ timezone }}"

## Install Packages
### Install BASE Applications
- name: "Install the BASE applications"
  tags: always,base
  package: 
    name:
      - chrony
      - vim
      - unzip
      - tree
      - neofetch
    state: latest

## Add ansible user      
- name: "Add 'ansible' user"
  tags: always,base
  user:
    name: ansible
    groups: root

- name: "Add Ansible SSH key"
  tags: always
  authorized_key:       
    user: ansible
    key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHrF06u8laeF0spuUwdwVf7SLw/xah8vJkIZJ19RcySd ansible"

- name: "Add sudoers file for ansible user"
  tags: always
  copy:
    src: sudoer_ansible
    dest: /etc/sudoers.d/ansible
    owner: root
    group: root

### Install Ubuntu BASE
- name: "Install the Ubuntu BASE applications"
  tags: always,base
  package: 
    name:
      - ufw
      - iputils-ping
      - bind9-utils
    state: latest   
  when: ansible_distribution == 'Ubuntu'   

## Setup dot and config files
### Deploy vimrc for david
# - name: "Deploy user's .vimrc"
#   tags: base,always
#   copy: 
#     src: vimrc
#     dest: /home/david/.vimrc
#     owner: david
#     group: david
#     mode: 0644          

# ### Deploy bashrc for david
# - name: "Deploy user's .bashrc"
#   tags: base,always
#   copy: 
#     src: bashrc
#     dest: /home/david/.bashrc
#     owner: david
#     group: david
#     mode: 0644    

### Deploy sshd_config file from template (Debian)
- name: "Deploy sshd_config file from template"
  tags: ssh
  template:
    src: "{{ ssh_template_ubuntu }}"
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: 0644
  when: ansible_distribution == 'Ubuntu'    
  notify: restart_sshd

### Deploy sshd_config file from template (RHEL)
- name: "Deploy sshd_config file from template"
  tags: ssh
  template:
    src: "{{ ssh_template_rhel }}"
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: 0644
  when: ansible_distribution == 'Fedora'
  notify: restart_sshd  

## Configure Firewall(s)
### UFW
- name: Allow SSH in UFW
  ufw: rule=allow port=22 proto=tcp
  when: ansible_distribution == 'Ubuntu'

- name: Set firewall default policy
  ufw: state=enabled policy=deny
  when: ansible_distribution == 'Ubuntu'  

## Configure Chrony Clients (Debian-based)
- name: Deploy chrony.conf file from template (Debian-based)"
  tags: chrony,ntp
  template:
    src: "{{ chrony_client_template }}"
    dest: "{{ chrony_conf_target_ubuntu }}"
    owner: root
    group: root
    mode: 0644
  when: ('time_servers' not in group_names) and ('ansible_distribution' == 'Ubuntu')
  notify: restart_chrony

## Configure Chrony Clients (RHEL-based)
- name: Deploy chrony.conf file from template (RHEL-based)"
  tags: chrony,ntp
  template:
    src: "{{ chrony_client_template }}"
    dest: "{{ chrony_conf_target_rhel }}"
    owner: root
    group: root
    mode: 0644
  when: ansible_distribution == 'Fedora'
  notify: restart_chrony